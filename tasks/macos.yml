#
# Configures macOS basic settings
#
# Options:
#   - update - set to true to upate the system to the latest version
#   - version_check - the major and minor version (e.g., 10.13) minimum to run this script
#   - filevault - whether to enable filevault or not
#
# Any option can be set to `false` or left undefined to skip it
#
---
- name  : MacOS
  block :

    # Update the operating system if `update` is set
    - name         : Updating operating system to latest version
      become       : yes
      shell        : softwareupdate -i -a
      register     : os_update
      changed_when : os_update.stderr.find("No updates are available") == -1
      when         : macos.update is defined and macos.update


    # Check the operating system version number
    - name        : Looking up MacOSX version
      set_fact :
        version_check :
          os      :
            major : "{{ ansible_distribution_version.split('.')[0]|int }}"
            minor : "{{ ansible_distribution_version.split('.')[1]|int }}"
          target  :
            major : "{{ (macos.version_check|string).split('.')[0]|int }}"
            minor : "{{ (macos.version_check|string).split('.')[1]|int }}"

    - debug :
        var       : version_check
        verbosity : 1


    - name  : Checking for version support
      fail :
        msg : "This installer requires macOS version {{ macos.version_check }} or above. Current version is {{ ansible_distribution_version }}.  If running a system update as part of this profile, try restarting your computer and running this script again."
      when : >
        (version_check.os.major < version_check.target.major) or
        (version_check.os.major == version_check.target.major and version_check.os.minor < version_check.target.minor)

    - debug :
        msg : "Warning, operating system version higher than tested.  Unexpected results may occur."
      when : >
        (version_check.os.major > version_check.target.major) or
        (version_check.os.major == version_check.target.major and version_check.os.minor > version_check.target.minor)


    # Setup .bash_profile
    - name : Loading DotFiles configuration sub-module
      include_tasks : macos/dotfiles.yml


    # Load custom binary scripts
    - name   : Copying custom binary scripts
      template :
        src  : "templates/usr/local/bin/{{ item }}.j2"
        dest : "/usr/local/bin/{{ item }}"
        mode : u=rwx,g=rwx,o=rx
      with_items :
        - VolumeOfFile


    # System configurations
    - name          : Loading FileVault configuration sub-module
      include_tasks : macos/filevault.yml
      when :
        - macos.file_vault is defined


    - name          : Loading Finder configuration sub-module
      include_tasks : macos/finder.yml
      when :
        - macos.finder is defined
        - macos.finder != false
        - macos.finder != []


    - name          : Loading keyboard configuration sub-module
      include_tasks : macos/keyboard.yml
      when :
        - macos.keyboard is defined
        - macos.keyboard != false
        - macos.keyboard != []


    - name          : Loading mouse configuration sub-module
      include_tasks : macos/mouse.yml
      when :
        - macos.mouse is defined
        - macos.mouse != false
        - macos.mouse != []


    - name          : Loading system configuration sub-module
      include_tasks : macos/system.yml
      when :
        - macos.system is defined
        - macos.system != false
        - macos.system != []



    # Mark this script complete in case others need to reference it
    - name    : Done
      set_fact:
        mymac : "{{ mymac|default([]) + [{ 'macos': true }] }}"


  when:
    - macos is defined
    - macos != false
    - macos != []
